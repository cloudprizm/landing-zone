---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xsubnetworks.demo.io
  labels:
    demo.io/cloud-provider: gcp
spec:
  compositeTypeRef:
    apiVersion: demo.io/v1alpha1
    kind: XSubnet
  mode: Pipeline
  pipeline:
    - step: subnets
      functionRef:
        name: crossplane-contrib-function-go-templating
      input:
        apiVersion: gotemplating.fn.crossplane.io/v1beta1
        kind: GoTemplate
        source: Inline
        inline:
          template: |
            ## Variable definition
            {{- $metadataName := .observed.composite.resource.metadata.name }}
            {{- $accountID := index .observed.composite.resource.spec.accountID }}

            {{- range $cidr := .observed.composite.resource.spec.cidrs }}
            {{- $subnetName := printf "%s-%s" $metadataName $cidr | replace "/" "-" | replace "." "-" }}
            
            ---
            apiVersion: compute.gcp.upbound.io/v1beta1
            kind: Subnetwork
            metadata:
              name: {{ $subnetName }}
              annotations:  
                gotemplating.fn.crossplane.io/composition-resource-name: {{ $subnetName }}
            spec:
              forProvider:
                ipCidrRange: {{ $cidr }}
                region: {{ $.observed.composite.resource.spec.cloudRegion }}
                networkSelector:
                  matchLabels:
                    demo.io/network-selector: {{ $.observed.composite.resource.spec.networkSelector }}
              providerConfigRef:
                name: {{ $accountID }}
            
            {{- end }}


    - step: automatically-detect-ready-composed-resources
      functionRef:
        name: crossplane-contrib-function-auto-ready